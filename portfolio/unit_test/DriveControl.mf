;18-649 Fall 2013
;Unit test for DriveControl
;Group 22 - Brody Anderson (bcanders), 
;Jeff Lau (jalau), 
;David Chow (davidcho),
;Yang Liu (yangliu2)

#INCLUDE defines.mf ;include CAN id and period definitions

;initialize
0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = true
0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = true
0s  I  AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = true
0s  I  DISPATCHER_PERIOD N DESIRED_FLOOR_CAN_ID DesiredFloor = 1 STOP BOTH
0s  I  DRIVE_CONTROL_PERIOD N LEVEL_SENSOR_[UP]_CAN_ID Leveling UP = true
+0s  I  CAR_LEVEL_POSITION_PERIOD N CAR_LEVEL_POSITION_CAN_ID CarLevelPosition = 0

;check initial state
;#state 'STATE_STOP'
+0.21s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getSpeed == 0.0
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getDirection == STOP
+0s  A F Drive : speed == STOP
+0s  A F Drive : direction == STOP

;Set conditions for 6.T.1
;#transition '6.T.1'
;Check that elevator stays in state based on state of emergency
+0.222s  I  DRIVE_CONTROL_PERIOD N EMERGENCY_BRAKE_CAN_ID SafetySensor = true

;Check state outputs
+0.21s  A F Drive : speed == STOP
+0s  A F Drive : direction == STOP
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getSpeed == 0.0
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getDirection == STOP

;Set conditions for 6.T.1 (part 2)
;#transition '6.T.1'
;Turn off Emergency
+0.21s  I  DRIVE_CONTROL_PERIOD N EMERGENCY_BRAKE_CAN_ID SafetySensor = false

;Set car to be overweight.
+0.21s  I  DRIVE_CONTROL_PERIOD N CAR_WEIGHT_CAN_ID CarWeight = 20000

;Check state outputs
+0.5s  A F Drive : speed == STOP
+0s  A F Drive : direction == STOP
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getSpeed == 0.0
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getDirection == STOP

;Set car weight back to "normal"
+0.21s  I DRIVE_CONTROL_PERIOD N CAR_WEIGHT_CAN_ID CarWeight = 100

;Set conditions for 6.T.2
;#transition '6.T.2'
+0.21s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = true
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = true
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = true
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = true
+0s  I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = false
+0s  I  DRIVE_CONTROL_PERIOD N LEVEL_SENSOR_[UP]_CAN_ID Leveling UP = true
+0s  I DISPATCHER_PERIOD N DESIRED_FLOOR_CAN_ID DesiredFloor = 2 STOP BACK
+0.2s  I DRIVE_CONTROL_PERIOD F DriveSpeed = UP 0.20
+0s  I  DRIVE_CONTROL_PERIOD N LEVEL_SENSOR_[UP]_CAN_ID Leveling UP = false

;Check that elevator moves to slow_state based on new DesiredFloor
;#state 'STATE_SLOW'
+0.21s  A S DriveControl : STATE == STATE_SLOW
+0s  A F Drive : speed == SLOW
+0s  A F Drive : direction == UP
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getSpeed == 0.20
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getDirection == UP
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 2

;Set conditions for 6.T.3
;#transition '6.T.3'
+0.21s  I DRIVE_CONTROL_PERIOD N EMERGENCY_BRAKE_CAN_ID SafetySensor = true
+0.21s  I DRIVE_CONTROL_PERIOD F DriveSpeed = STOP 0.25

;#state 'STATE_LEVEL'
+0.21s  A F Drive : speed == LEVEL
+0s  A F Drive : direction == UP
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getDirection == STOP

;#transition '6.T.4'
+0.21s  I DRIVE_CONTROL_PERIOD F DriveSpeed = STOP 0.05
+0s  I  DRIVE_CONTROL_PERIOD N LEVEL_SENSOR_[UP]_CAN_ID Leveling UP = true

;Check state outputs
;#state 'S7.1 STATE_STOP'
+0.21s  A S DriveControl : STATE == STATE_STOP
+0s  A F Drive : speed == STOP
+0s  A F Drive : direction == STOP
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getSpeed == 0.05
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getDirection == STOP

;#transition '6.T.1'
+0.21s  I DRIVE_CONTROL_PERIOD F DriveSpeed = STOP 0.00

;Check State STOP again
+0.21s  A S DriveControl : STATE == STATE_STOP
+0s  A F Drive : speed == STOP
+0s  A F Drive : direction == STOP
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getSpeed == 0.00
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getDirection == STOP

;Revert back to normal state
+0.21s  I  DRIVE_CONTROL_PERIOD N EMERGENCY_BRAKE_CAN_ID SafetySensor = false
+0s  I DRIVE_CONTROL_PERIOD F DriveSpeed = UP 0.20
+0s  I  DRIVE_CONTROL_PERIOD N LEVEL_SENSOR_[UP]_CAN_ID Leveling UP = true

;Reverting conditions back for 6.T.2 and checking state
;Check that elevator moves to slow_state based on new DesiredFloor
+0.21s  A F Drive : speed == SLOW
+0s  A F Drive : direction == UP
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getSpeed == 0.20
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getDirection == UP
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 2

;Set conditions for 6.T.7
+0.21s  I DRIVE_CONTROL_PERIOD F DriveSpeed = UP 0.25
+0s  I DISPATCHER_PERIOD N DESIRED_FLOOR_CAN_ID DesiredFloor = 2 STOP BACK
+0s  I  DRIVE_CONTROL_PERIOD N LEVEL_SENSOR_[UP]_CAN_ID Leveling UP = false
+0s  I CAR_POSITION_CONTROL_PERIOD N CAR_LEVEL_POSITION_CAN_ID CarLevelPosition = 3000

;Transition to State Fast:
;#state 'S7.4 STATE_FAST'
+0.21s  A S DriveControl : STATE == STATE_FAST
+0s  A F Drive : speed == FAST
+0s  A F Drive : direction == UP
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getSpeed == 0.25
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getDirection == UP

;Set conditions for 6.T.8
+0.21s  I DRIVE_CONTROL_PERIOD F DriveSpeed = UP 5.0
+0s  I DISPATCHER_PERIOD N DESIRED_FLOOR_CAN_ID DesiredFloor = 2 STOP BACK
+0s  I CAR_POSITION_CONTROL_PERIOD N CAR_LEVEL_POSITION_CAN_ID CarLevelPosition = 500

;#state 'S7.2 STATE_SLOW'
+0.21s  A S DriveControl : STATE == STATE_SLOW
+0s  A F Drive : speed == SLOW
+0s  A F Drive : direction == UP
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getSpeed == 5.0
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getDirection == UP

;Set conditions for 6.T.7
+0.21s  I DRIVE_CONTROL_PERIOD F DriveSpeed = UP 0.25
+0s  I DISPATCHER_PERIOD N DESIRED_FLOOR_CAN_ID DesiredFloor = 2 STOP BACK
+0s  I CAR_POSITION_CONTROL_PERIOD N CAR_LEVEL_POSITION_CAN_ID CarLevelPosition = 3000

;#state 'S7.4 STATE_FAST'
+0.21s  A S DriveControl : STATE == STATE_FAST
+0s  A F Drive : speed == FAST
+0s  A F Drive : direction == UP
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getSpeed == 0.25
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getDirection == UP

;Set conditions for 6.T.7
;#transition '6.T.7'
+0.21s  I DRIVE_CONTROL_PERIOD N EMERGENCY_BRAKE_CAN_ID SafetySensor = true
+0s  I DRIVE_CONTROL_PERIOD F DriveSpeed = STOP 1.00

;#state 'STATE_SLOW'
+0.21s  A F Drive : speed == SLOW
+0s  A F Drive : direction == UP
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getDirection == STOP
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 2

;Set conditions for 6.T.3
;#transition '6.T.3'
+0.21s  I DRIVE_CONTROL_PERIOD F DriveSpeed = STOP 0.25

;#state 'STATE_LEVEL'
+0.21s  A F Drive : speed == LEVEL
+0s  A F Drive : direction == UP
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getDirection == STOP

;#transition '6.T.4'
+0.21s  I DRIVE_CONTROL_PERIOD F DriveSpeed = STOP 0.05
+0s  I  DRIVE_CONTROL_PERIOD N LEVEL_SENSOR_[UP]_CAN_ID Leveling UP = true

;Check state outputs
;#state 'S7.1 STATE_STOP'
+0.21s  A S DriveControl : STATE == STATE_STOP
+0s  A F Drive : speed == STOP
+0s  A F Drive : direction == STOP
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getSpeed == 0.05
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getDirection == STOP

;
+0.21s  I DRIVE_CONTROL_PERIOD F DriveSpeed = STOP 0.00

;Check State STOP
+0.21s  A S DriveControl : STATE == STATE_STOP
+0s  A F Drive : speed == STOP
+0s  A F Drive : direction == STOP
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getSpeed == 0.00
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getDirection == STOP

;Set conditions for 6.T.2
;#transition '6.T.2'
+0.21s  I DRIVE_CONTROL_PERIOD N EMERGENCY_BRAKE_CAN_ID SafetySensor = false
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = true
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = true
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = true
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = true
+0s  I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = false
+0s  I DISPATCHER_PERIOD N DESIRED_FLOOR_CAN_ID DesiredFloor = 2 STOP BACK
+0s  I DRIVE_CONTROL_PERIOD F DriveSpeed = UP 0.20
+0s  I  DRIVE_CONTROL_PERIOD N LEVEL_SENSOR_[UP]_CAN_ID Leveling UP = true

;#state 'STATE_SLOW'
+0.21s  A F Drive : speed == SLOW
+0s  A F Drive : direction == UP
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getSpeed == 0.20
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getDirection == UP
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 2


;Set conditions for 6.T.4
;#transition '6.T.4'
+0.21s  I AT_FLOOR_PERIOD N AT_FLOOR_[2][BACK]_CAN_ID AtFloor 2 BACK = true
+0s  I DRIVE_CONTROL_PERIOD F DriveSpeed = UP 0.05
+0s  I  DRIVE_CONTROL_PERIOD N LEVEL_SENSOR_[UP]_CAN_ID Leveling UP = false

;Check State for Leveling outputs
;#state 'STATE_LEVEL'
+0.21s  A F Drive : speed == LEVEL
+0s  A F Drive : direction == UP
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getDirection == UP
+0s	A N AT_FLOOR_[2][BACK]_CAN_ID AtFloor 2 BACK : getValue == true

;Set conditions for 6.T.5
;#transition '6.T.5'
+0.21s  I  DRIVE_CONTROL_PERIOD N LEVEL_SENSOR_[UP]_CAN_ID Leveling UP = true
+0s  I  DRIVE_CONTROL_PERIOD F DriveSpeed = STOP 0.0

;Check state for STOP
+0.21s  A F Drive : speed == STOP
+0s  A F Drive : direction == STOP
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getSpeed == 0.0
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getDirection == STOP

;Set car to be overweight and slips on the cable.
;#transition '6.T.6'
+0.21s I  DRIVE_CONTROL_PERIOD N CAR_WEIGHT_CAN_ID CarWeight = 30000
+0s I  DRIVE_CONTROL_PERIOD N LEVEL_SENSOR_[UP]_CAN_ID Leveling UP = false
+0s I DRIVE_CONTROL_PERIOD F DriveSpeed = UP 0.05

;Check State for Leveling outputs
;#state 'STATE_LEVEL'
+0.21s  A F Drive : speed == LEVEL
+0s  A F Drive : direction == UP
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getDirection == UP
+0s	A N AT_FLOOR_[2][BACK]_CAN_ID AtFloor 2 BACK : getValue == true

;Set conditions for 6.T.5
;#transition '6.T.5'
+0.21s I  DRIVE_CONTROL_PERIOD N CAR_WEIGHT_CAN_ID CarWeight = 5000
+0s  I  DRIVE_CONTROL_PERIOD N LEVEL_SENSOR_[UP]_CAN_ID Leveling UP = true
+0s  I  DRIVE_CONTROL_PERIOD F DriveSpeed = STOP 0.0

;Check state for STOP
+2s  A F Drive : speed == STOP
+0s  A F Drive : direction == STOP
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getSpeed == 0.0
+0s  A N DRIVE_SPEED_CAN_ID DriveSpeed : getDirection == STOP

