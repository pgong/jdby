; 18649 <Fall 2013>
; Group 22
; David Chow (davidcho)
; Brody Anderson (bcanders)
; Yang Liu (yangliu2)
; Jeff Lau (jalau)
; 
; Unit Test: Dispatcher

#INCLUDE defines.mf ;include CAN id and period definitions

;initialize
0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = false
0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = false
0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = false
0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = false
0s  I  AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = true
0s  I  HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[2][BACK][UP]_CAN_ID HallCall 2 BACK UP = true
+0.1s  I  CAR_BUTTON_CONTROL_PERIOD N CAR_CALL_[5][FRONT]_CAN_ID CarCall 5 FRONT = true
+0s  I  DRIVE_CONTROL_PERIOD N DRIVE_SPEED_CAN_ID DriveSpeed = 0.0 STOP
+0s  I  CAR_LEVEL_POSITION_PERIOD N CAR_LEVEL_POSITION_CAN_ID CarLevelPosition = 0

;check that state 2:
;#state 'STATE_DOORSOPEN
+0.21s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 1
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == BOTH

;Set conditions to get to the next floor
;#transition 11.T.3
+0.21s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = true
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = true
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = true
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = true
;+0s  I  AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = false

;check state 1
;#state 'STATE_DOORSCLOSED
+0.41s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 2
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == BACK

;Set conditions to arrive at floor
;#transition '11.T.1'
+0.21s  I  AT_FLOOR_PERIOD N AT_FLOOR_[2][BACK]_CAN_ID AtFloor 2 BACK = true
+0s  I  CAR_LEVEL_POSITION_PERIOD N CAR_LEVEL_POSITION_CAN_ID CarLevelPosition = 5001
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = true
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = true
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = false
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = false
+0.1s  I  HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[2][BACK][UP]_CAN_ID HallCall 2 BACK UP = false

;check state 2
;#state 'STATE_DOORSOPEN'
+0.21s A N HALL_CALL_[2][BACK][UP]_CAN_ID HallCall 2 BACK UP : getValue == false
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 5
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT

;Set conditions to get to the next floor
;#transition 11.T.3
+0.21s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = true
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = true
+0.1s  I  AT_FLOOR_PERIOD N AT_FLOOR_[2][BACK]_CAN_ID AtFloor 2 BACK = false

;check state 1
;#state 'STATE_DOORSCLOSED
+0.21s A N DRIVE_SPEED_CAN_ID DriveSpeed : getSpeed == 0.0
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 5
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT

;Set conditions to get to an emergency state
;#transition 11.T.2
+0.21s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = false
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = false

;check state 3
;#state 'STATE_EMERGENCY
+0.21s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 1
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == BOTH

;Set conditions to arrive at floor
;#transition '11.T.5'
+0.21s  I  CAR_LEVEL_POSITION_PERIOD N CAR_LEVEL_POSITION_CAN_ID CarLevelPosition = 1
+0s  I  AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = true
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = false
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = false
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = false
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = false

;check state 2
;#state 'STATE_DOORSOPEN
+0.21s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 1
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == BOTH

;Set conditions to get to an emergency state
;#transition 11.T.4
+0.21s  I  AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = false

;check state 3
;#state 'STATE_EMERGENCY
+0.21s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 1
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == BOTH

;Set conditions to arrive at floor
;#transition '11.T.5'
+0.21s  I  AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = true

;check state 2
;#state 'STATE_DOORSOPEN
+0.21s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 1
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == BOTH

;Set conditions to get to the DoorsClosed State and set on level 3
;#transition 11.T.3
+0.025s I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = true
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = true
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = true
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = true
+0s  I  AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = false
+0s  I  AT_FLOOR_PERIOD N AT_FLOOR_[3][FRONT]_CAN_ID AtFloor 3 FRONT = true
+0s  I  CAR_LEVEL_POSITION_PERIOD N CAR_LEVEL_POSITION_CAN_ID CarLevelPosition = 10001

;check state 1
;#state 'STATE_DOORSCLOSED
+0.21s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 5
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT

;Set conditions for hall call up at floor 4
+0.025s  I  HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[4][FRONT][UP]_CAN_ID HallCall 4 FRONT UP = true

;check state 1
;Expect 4 UP FRONT
;#state 'STATE_DOORSCLOSED
+0.21s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 4
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT

;Set conditions for hall call down at floor 4
+0.025s  I  HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[4][FRONT][DOWN]_CAN_ID HallCall 4 FRONT DOWN = true
+0s  I  HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[4][FRONT][UP]_CAN_ID HallCall 4 FRONT UP = false

;check state 1
;Expect 5 DOWN FRONT
;#state 'STATE_DOORSCLOSED
+0.21s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 5
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == DOWN
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT

;Set conditions for hall call down at floor 6
+0.025s  I  HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[6][FRONT][DOWN]_CAN_ID HallCall 6 FRONT DOWN = true
+0s  I  HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[4][FRONT][DOWN]_CAN_ID HallCall 4 FRONT DOWN = false

;check state 1
;Expect 5 UP FRONT
;#state 'STATE_DOORSCLOSED
+0.21s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 5
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT

;Set conditions for elevator to go down to lobby from floor 3
+0.025s  I  HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[6][FRONT][DOWN]_CAN_ID HallCall 6 FRONT DOWN = false
+0s  I  CAR_BUTTON_CONTROL_PERIOD N CAR_CALL_[1][FRONT]_CAN_ID CarCall 1 FRONT = true
+0s  I  AT_FLOOR_PERIOD N AT_FLOOR_[3][FRONT]_CAN_ID AtFloor 3 FRONT = false
+0s  I  AT_FLOOR_PERIOD N AT_FLOOR_[5][FRONT]_CAN_ID AtFloor 5 FRONT = true
+0s  I  CAR_LEVEL_POSITION_PERIOD N CAR_LEVEL_POSITION_CAN_ID CarLevelPosition = 20001

+0.25s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = false
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = false
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = true
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = true
+0s  I  CAR_BUTTON_CONTROL_PERIOD N CAR_CALL_[5][FRONT]_CAN_ID CarCall 5 FRONT = false

+0.21s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = true
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = true
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = true
+0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = true

;Expect 1 STOP BOTH
;#state 'STATE_DOORSCLOSED
+0.21s  A  N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 1
+0s  A  N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP
+0s  A  N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == BOTH

;Set conditions for hall call down at floor 2
+0.025s  I  HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[2][BACK][DOWN]_CAN_ID HallCall 2 BACK DOWN = true

;check state 1
;Expect 2 DOWN BACK
;#state 'STATE_DOORSCLOSED
+0.21s  A  N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 2
+0s  A  N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == DOWN
+0s  A  N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == BACK

;Set conditions for hall call down at floor 6
+0.25s  I  HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[2][BACK][UP]_CAN_ID HallCall 2 BACK UP = true
+0.1s  I  HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[2][BACK][DOWN]_CAN_ID HallCall 2 BACK DOWN = false

;check state 1
;Expect 1 UP BOTH
;#state 'STATE_DOORSCLOSED
+0.21s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 1
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP
+0s  A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == BOTH

